sudo: required

services: docker

git:
  # we don't want travis to pull them for the lint build,
  # so we pull them manually in the tests build
  submodules: false

cache:
  directories:
    - $HOME/.cachedb

env:
  matrix:
    - LINT_CHECK="1"
    - TESTS="1"
  global:
    - DOCKER_COMPOSE_VERSION="1.17.1"
    - TESTS="0" LINT_CHECK="0"
    - ADDONS_DIR=${TRAVIS_BUILD_DIR}/odoo/local-src
    - SONGS_DIR=${TRAVIS_BUILD_DIR}/odoo/songs
    - COMPOSE_PROJECT_NAME=bso
    - GENERATED_IMAGE=${COMPOSE_PROJECT_NAME}_odoo
    - DOCKER_HUB_REPO=camptocamp/${GENERATED_IMAGE}
    - TRAVIS_COMPOSE="travis/docker-compose.yml"
    - RANCHER_MINION_SERVER=https://${COMPOSE_PROJECT_NAME}.odoo-test.camptocamp.ch
    # Put here the travis secure key generated by `travis encrypt` command for the rancher minion server
    - secure: "rlzhC8g9UjBG1+XVM7TZsqCxHPYxfKxTxzhGtmRB29++dwZT1odAcGt3hRpllV9jP8B3+AvbzOwufUOT0vKl7JRG8/MorDHkAXQGD9SQLSBfoL1n6EnIEN5mMQuLr+P181L5aTc9QBxyDcG+1v9kdD/fM5O/X9EplH7gjt24sGCLxhrO9Nc0FcIrtBBA8/3Z6/zaJsDmWwx3LRe21bmumq2liADy9DV8/0N1mgY9ikz6pfM4DH9+XavRm1dqJtmBzeQmjouP0qTHAgQhJ0wF/PwLREmGZCmVGCSKkDVVVylRmJh4QXpv0iGtYdjYoHm2/iS0IaBigPyRTnniX/2cUXgn1zLMs0sg3PZyH9/DcvV0JPoccoaPLSSHFCVBARg+Jj2XL4iF1HurmxQxIOtuY90zs43f3ikAU8q4mc6Em/x2jWIY54itQqi6ofZwEuJN+KN5eN8rl3241VPYjeE1pxw1A/iSJoGFiGdBMtWtafoARISm6wqgQiqeDkOouZinTe9jcXhndtcQDuSxKu9xP8bArPraASmOiIqH7ebDG1qHxo0HscAeCARru8rOm+4RsWHakRUeSxCKZFyiffUb57r+bcb/w2SOncYahJsdCIT500jrvSkBA+O5nR0ITDQ2I6ezcGXsBV1gj5bxmgMzUgDW54+tBq1R8/T8IwuNUB4="

before_install:
  - git config --global user.name "TravisCI"
  - git config --global user.email "travis@camptocamp.com"
  # Generate a md5 from submodules to identify the dump.
  # We will generate a new dump each time any submodule changes
  - if [ "$TESTS" == "1" ] ; then export SUBS_MD5=$(git submodule status | md5sum | cut -d ' ' -f1) ; fi
  # Only create cached dump on commits on master and not on tags.
  # Database dumps will land on the master's cache only.
  - if [ "$TESTS" == "1" -a "$TRAVIS_PULL_REQUEST" == "false" -a -z "$TRAVIS_TAG" ] ; then export CREATE_DB_CACHE="true" ; fi
  - if [ "$LINT_CHECK" == "1" ] ; then pip install --user -q flake8 ; fi
  - if [ "$LINT_CHECK" == "0" ] ; then pip install --user -q gitpython requests pyOpenSSL ndg-httpsclient pyasn1 pyyaml; fi

install:
  - if [ "$LINT_CHECK" == "0" ] ; then ./travis/git_submodule_update.py ; fi
    # we always specify '-f docker-compose.yml' so 'docker-compose.override.yml'
    # is not used and so the volumes are not shared with the host
  - if [ "$LINT_CHECK" == "0" ] ; then docker-compose -f $TRAVIS_COMPOSE build --pull ; fi
  - if [ "$TESTS" == "1" ] ; then docker-compose -f $TRAVIS_COMPOSE up -d db ; fi
  - if [ "$TESTS" == "1" ] ; then docker-compose -f $TRAVIS_COMPOSE ps ; fi

# We run the tests and migration in the same build, so we can push the docker image
# after that we validated it has tests and migration passing
script:
  - if [ "$LINT_CHECK" == "1" ] ; then flake8 ${ADDONS_DIR} ${SONGS_DIR} --exclude=__init__.py ; fi
  # run tests on an empty database, which is dropped afterwards
  - if [ "$TESTS" == "1" ] ; then docker-compose -f $TRAVIS_COMPOSE run --rm -e SUBS_MD5=${SUBS_MD5} -e CREATE_DB_CACHE=${CREATE_DB_CACHE} -e DEMO=True odoo runtests ; fi
  # run the migration
  #
  # Notes on releases:
  #
  # On each release both upgrade step and install from scratch are tested
  # on separate builds.  (even if cache exists)
  #
  # When creating a release a git tag will generate 2 builds on travis:
  # - one for the new tag
  # - a second for the commit on master.
  #
  # As the tag build is used to generate a new release we want to end it fast
  # to ship it quickly. Thus as odoo/VERSION has changed it needs to check for
  # previous tag cached database. MIG_LOAD_VERSION_CEIL is there for that.
  #
  # However, to ensure a build from scratch is done on each new release
  # the search of a previous version dump is not active on commits on master.
  # This will force a complete build when odoo/VERSION has been edited and doesn't
  # match a cached database dump because such dump has not been created yet.
  - if [ "$TESTS" == "1" ] ; then docker-compose -f $TRAVIS_COMPOSE run --rm -e MARABUNTA_MODE=sample -e MARABUNTA_ALLOW_SERIE=True -e CREATE_DB_CACHE=${CREATE_DB_CACHE} -e MIG_LOAD_VERSION_CEIL=${TRAVIS_TAG} odoo runmigration ; fi

after_success:
  - if [ "$TESTS" == "1" ] ; then ./travis/publish.sh ; fi
