sudo: required

services: docker

git:
  # we don't want travis to pull them for the lint build,
  # so we pull them manually in the tests build
  submodules: false

env:
  matrix:
    - LINT_CHECK="1"
    - TESTS="1"
  global:
    - DOCKER_COMPOSE_VERSION="1.7.1"
    - TESTS="0" LINT_CHECK="0"
    - ADDONS_DIR=${TRAVIS_BUILD_DIR}/odoo/local-src
    - SONGS_DIR=${TRAVIS_BUILD_DIR}/odoo/songs
    - COMPOSE_PROJECT_NAME=bso
    - GENERATED_IMAGE=${COMPOSE_PROJECT_NAME}_odoo
    - DOCKER_HUB_REPO=camptocamp/${GENERATED_IMAGE}
    - RANCHER_MINION_SERVER=https://${COMPOSE_PROJECT_NAME}.odoo-test.camptocamp.ch
    # Put here the travis secure key generated by `travis encrypt` command for the rancher minion server
    - secure: "rlzhC8g9UjBG1+XVM7TZsqCxHPYxfKxTxzhGtmRB29++dwZT1odAcGt3hRpllV9jP8B3+AvbzOwufUOT0vKl7JRG8/MorDHkAXQGD9SQLSBfoL1n6EnIEN5mMQuLr+P181L5aTc9QBxyDcG+1v9kdD/fM5O/X9EplH7gjt24sGCLxhrO9Nc0FcIrtBBA8/3Z6/zaJsDmWwx3LRe21bmumq2liADy9DV8/0N1mgY9ikz6pfM4DH9+XavRm1dqJtmBzeQmjouP0qTHAgQhJ0wF/PwLREmGZCmVGCSKkDVVVylRmJh4QXpv0iGtYdjYoHm2/iS0IaBigPyRTnniX/2cUXgn1zLMs0sg3PZyH9/DcvV0JPoccoaPLSSHFCVBARg+Jj2XL4iF1HurmxQxIOtuY90zs43f3ikAU8q4mc6Em/x2jWIY54itQqi6ofZwEuJN+KN5eN8rl3241VPYjeE1pxw1A/iSJoGFiGdBMtWtafoARISm6wqgQiqeDkOouZinTe9jcXhndtcQDuSxKu9xP8bArPraASmOiIqH7ebDG1qHxo0HscAeCARru8rOm+4RsWHakRUeSxCKZFyiffUb57r+bcb/w2SOncYahJsdCIT500jrvSkBA+O5nR0ITDQ2I6ezcGXsBV1gj5bxmgMzUgDW54+tBq1R8/T8IwuNUB4="

before_install:
  - sudo apt-get update
  - sudo DEBIAN_FRONTEND=noninteractive apt-get install -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" docker-engine --yes --force-yes
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - git config --global user.name "TravisCI"
  - git config --global user.email "travis@camptocamp.com"
  - if [ "$LINT_CHECK" == "1" ] ; then pip install --user -q flake8 ; fi
  - if [ "$LINT_CHECK" == "0" ] ; then pip install --user -q gitpython requests pyyaml ; fi

install:
  - if [ "$LINT_CHECK" == "0" ] ; then ./travis/git_submodule_update.py ; fi
    # we always specify '-f docker-compose.yml' so 'docker-compose.override.yml'
    # is not used and so the volumes are not shared with the host
  - if [ "$LINT_CHECK" == "0" ] ; then docker-compose -f docker-compose.yml build --pull ; fi
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml up -d db ; fi
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml ps ; fi

# We run the tests and scenario in the same build, so we can push the docker image
# after that we validated it has tests and scenario passing
script:
  - if [ "$LINT_CHECK" == "1" ] ; then flake8 ${ADDONS_DIR} ${SONGS_DIR} --exclude=__init__.py ; fi
  # run tests on an empty database, which is dropped afterwards
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml run --rm -e ODOO_CLOUD_PLATFORM_UNSAFE=1 odoo runtests ; fi
  # run the scenario
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml run --rm -e ODOO_CLOUD_PLATFORM_UNSAFE=1 -e MARABUNTA_MODE=demo -e MARABUNTA_ALLOW_SERIE=True odoo odoo --stop-after-init ; fi

after_success:
  - if [ "$TESTS" == "1" ] ; then ./travis/publish.sh ; fi
